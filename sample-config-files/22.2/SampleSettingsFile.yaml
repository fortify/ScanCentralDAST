# Refer to the Fortify ScanCentral DAST Configuration and Usage Guide for more details.
# Environment variable placeholders may be used in the format ${ENVIRONMENT VARIABLE NAME}. Any environment variable placeholder will be replaced during runtime.

databaseSettings:
  # databaseProvider indicates the type of database that will be used.
  # Allowed values: SQLServer, PostgreSQL, AzureSQLServer, AzurePostgreSQL, AmazonRdsSQLServer, AmazonRdsPostgreSQL
  databaseProvider: SQLServer
  server: MyServer
  database: DAST
  # dboLevelDatabaseAccount is not required if the database already exists and migration scripts have already been applied.
  # A migration script can be created using the 'generateMigrationScript' command.
  dboLevelDatabaseAccount:
    username: username
    # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
    password: password
    # Allowed values: true, false
    useWindowsAuthentication: false
    additionalConnectionProperties: 
  standardDatabaseAccount:
    username: username
    # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
    password: password
    # Allowed values: true, false
    createLogin: false
    additionalConnectionProperties: 
# Allowed values: true, false
retainCompletedScans: false
# Allowed values: true, false
disableAdvancedScanPrioritization: false
# Allowed values: true, false
enableRestrictedScanSettings: false
# An encrypted serviceToken is recommended. The password can be encrypted using the 'encrypt' command.
serviceToken: minimum_10_characters
smartUpdateSettings:
  smartUpdateUrl: https://smartupdate.fortify.microfocus.com/
  licensingUrl: https://licenseservice.fortify.microfocus.com/
sSCSettings:
  sSCRootUrl: http://ssc-instance:8080/ssc
  serviceAccountUserName: username
  serviceAccountPassword: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
dASTApiSettings:
  rootUrl: http://dast-api:64814
  disableCorsOrigins: false # Allowed values: true, false
  # One ore more corsOrigins entries is required if disableCorsOrigins = false
  # Each entry should be on a separate line and start with a dash (-) followed by a space
  corsOrigins:
  - http://ssc-instance:8080
  - http://dast-api:64814
lIMSettings:
  limUrl: https://lim-server-instance/HP.AppSec.Lim.Services/
  serviceAccountUserName: username
  serviceAccountPassword: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
  defaultLimPoolName: username
  defaultLimPoolPassword: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
  useLimRestApi: false # Allowed values: true, false
utilityWorkerServiceSettings:
  rootUrl: http://dast-utility-service:5000
dastApiSSLSettings:
  sSLPreferenceType: UseExistingCertificate # Allowed values: GenerateCertificate, UseExistingCertificate, NoSSL
  # generateCertificateModel is required if sSLPreferenceType =  GenerateCertificate
  generateCertificateModel:
    certificateDirectory: c:\directory_where_certificate_is_saved
    host: dast-api
    password: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
    validity: 1000
    location: Alpharetta
    email: email@domain.com
  # existingCertificateModel is required if sSLPreferenceType =  UseExistingCertificate
  existingCertificateModel:
    certificateFullPath: c:\path_to_cert\dast_api.cert
    password: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
utilityWorkerServiceSSLSettings:
  sSLPreferenceType: UseExistingCertificate # Allowed values: GenerateCertificate, UseExistingCertificate, NoSSL
  # generateCertificateModel is required if sSLPreferenceType =  GenerateCertificate
  generateCertificateModel:
    certificateDirectory: c:\directory_where_certificate_is_saved
    host: dast-utility-service
    password: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
    validity: 1000
    location: Alpharetta
    email: email@domain.com
  # existingCertificateModel is required if sSLPreferenceType =  UseExistingCertificate
  existingCertificateModel:
    certificateFullPath: c:\path_to_cert\dast_utility_service.cert
    password: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
environmentSettings:
  allowNonTrustedServerCertificate: true # Allowed values: true, false
  proxySettings:
    useProxy: true # Allowed values: true, false
    proxyAddress: http://proxy-instance.com:8080
    proxyPassword: password # An encrypted password is recommended. The password can be encrypted using the 'encrypt' command.
    proxyUserName: username
    proxyBypassList: dast-api,dast-utility-service,lim-server-instance,ssc-instance
applySecureBase: true # Allowed values: true, false
# secureBasePath is required if applySecureBase =  true
secureBasePath: c:\path_to_securebase_data\DefaultData.zip
